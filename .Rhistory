zoomSnap = 0.25,
zoomDelta = 0.5,
dragging = TRUE),
width = '100%',
height = '800px')  %>%
addLayersControl(baseGroups = c("Força da infecção", # 1
'Casos ativos'), #2
options = layersControlOptions(collapsed = FALSE),
position = "topright") %>%
addProviderTiles(providers$CartoDB.Positron) %>%
fitBounds(-35.018515,  -8.155340, -34.857559,  -7.926497 ) %>%
addPolygons(group = "Força da infecção",
fillColor = ~pal_FOI(FOI),
data = db_map,
fillOpacity = 0.5,
stroke = TRUE,
color = 'black',
weight = 1,
smoothFactor = 0.2,
label = ~sprintf("<strong style='text-align:center;color:darkblue'> %s </strong><br/><hr>
<strong>Casos ativos:</strong> %s<br/>
<strong>Força da infecção:</strong> %.1f",
Name,
format(Active_cases, decimal.mark = ",", big.mark = "."),
FOI) %>%
lapply(htmltools::HTML),
labelOptions = labelOptions(textsize = "12px")) %>%
addPolygons(group = "Casos ativos",
fillColor = ~pal_casosAtivos(Active_cases),
lng = db_map$longitude,
lat = db_map$latitude,
fillOpacity = 0.5,
stroke = TRUE,
color = 'black',
weight = 1,
smoothFactor = 0.2,
label = ~sprintf("<strong style='text-align:center;color:darkblue'> %s </strong><br/><hr>
<strong>Casos ativos:</strong> %s<br/>
<strong>Força da infecção:</strong> %.1f",
Name,
format(Active_cases, decimal.mark = ",", big.mark = "."),
FOI) %>%
lapply(htmltools::HTML),
labelOptions = labelOptions(textsize = "12px")) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleep = FALSE) %>%
addScaleBar(position = "bottomleft") %>%
addControl(html = north_arrow,
position = "bottomright",
className = "") %>%
htmlwidgets::onRender("
function(el, x) {
this.on('baselayerchange', function(e) {
e.layer.bringToBack();
})
}") %>%
addLegend(pal = pal_FOI,
values = ~FOI,
labFormat = labelFormat(prefix = "", suffix = "",
#between = ", ",
#transform = function(x) 100 * x
big.mark = " "),
group = "Força da infecção",
position = "topright" ,
title = "Força da infecção") %>%
addLegend(pal = pal_casosAtivos,
values = ~Active_cases,
labFormat = labelFormat(prefix = "", suffix = "",
#between = ", ",
#transform = function(x) 100 * x
big.mark = " "),
group = "Casos ativos",
position = "topright" ,
title = "Casos ativos") %>%
htmlwidgets::onRender("
function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}")
mapx <- leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addPolygons(data = db_map)
# read the most recent epidemic DB
db_map2 = read_excel("data/data_repo/epidem_data_2020-07-29.xlsx")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd('..')
# #### Leitura dos dados
# pcr_box <- read_rds("dados/pcr_box.rds")
# pcr_sf <- read_rds("dados/pcr_sf.rds")
# pcr_recife_upstatus  <- read_rds("dados/pcr_upstatus_recife.rds")
# pcr_upstatus_pop <- read_rds("dados/pcr_upstatus_pop.rds")
# pcr_obito_pop <- read_rds("dados/pcr_obito_pop.rds")
# google_mobility_base <- read_rds("dados/google_mobility_report.rds")
# inloco_recife_serie <- read_rds("dados/inloco_recife_serie.rds")
# inloco_bairro_isolamento <- read_rds("dados/inloco_bairros_isolamento.rds")
inloco_pcr_upstatus <- read_rds("dados/inloco/inloco_pcr_upstatus_latest.rds")
north_arrow <- '<img src="https://image.flaticon.com/icons/svg/731/731590.svg" alt="Direction free icon" title="North Direction" width="64" height="64">'
db_map <- inloco_pcr_upstatus %>%
filter(data == max(data, na.rm = TRUE))
View(db_map)
View(db_map)
View(db_map2)
View(db_map2)
# map
map5 <- db_map %>%
leaflet(
options = leafletOptions(zoomControl = TRUE,
scrollWheelZoom = FALSE,
zoomSnap = 0.25,
zoomDelta = 0.5,
dragging = TRUE),
width = '100%',
height = '800px')  %>%
addLayersControl(baseGroups = c("Força da infecção", # 1
'Casos ativos'), #2
options = layersControlOptions(collapsed = FALSE),
position = "topright") %>%
addProviderTiles(providers$CartoDB.Positron) %>%
fitBounds(-35.018515,  -8.155340, -34.857559,  -7.926497 ) %>%
addPolygons(group = "Força da infecção",
fillColor = ~pal_FOI(FOI),
lng = ~longitude,
lat = ~latitude,
fillOpacity = 0.5,
stroke = TRUE,
color = 'black',
weight = 1,
smoothFactor = 0.2,
label = ~sprintf("<strong style='text-align:center;color:darkblue'> %s </strong><br/><hr>
<strong>Casos ativos:</strong> %s<br/>
<strong>Força da infecção:</strong> %.1f",
Name,
format(Active_cases, decimal.mark = ",", big.mark = "."),
FOI) %>%
lapply(htmltools::HTML),
labelOptions = labelOptions(textsize = "12px")) %>%
addPolygons(group = "Casos ativos",
fillColor = ~pal_casosAtivos(Active_cases),
lng = db_map$longitude,
lat = db_map$latitude,
fillOpacity = 0.5,
stroke = TRUE,
color = 'black',
weight = 1,
smoothFactor = 0.2,
label = ~sprintf("<strong style='text-align:center;color:darkblue'> %s </strong><br/><hr>
<strong>Casos ativos:</strong> %s<br/>
<strong>Força da infecção:</strong> %.1f",
Name,
format(Active_cases, decimal.mark = ",", big.mark = "."),
FOI) %>%
lapply(htmltools::HTML),
labelOptions = labelOptions(textsize = "12px")) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleep = FALSE) %>%
addScaleBar(position = "bottomleft") %>%
addControl(html = north_arrow,
position = "bottomright",
className = "") %>%
htmlwidgets::onRender("
function(el, x) {
this.on('baselayerchange', function(e) {
e.layer.bringToBack();
})
}") %>%
addLegend(pal = pal_FOI,
values = ~FOI,
labFormat = labelFormat(prefix = "", suffix = "",
#between = ", ",
#transform = function(x) 100 * x
big.mark = " "),
group = "Força da infecção",
position = "topright" ,
title = "Força da infecção") %>%
addLegend(pal = pal_casosAtivos,
values = ~Active_cases,
labFormat = labelFormat(prefix = "", suffix = "",
#between = ", ",
#transform = function(x) 100 * x
big.mark = " "),
group = "Casos ativos",
position = "topright" ,
title = "Casos ativos") %>%
htmlwidgets::onRender("
function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}")
# read the most recent epidemic DB
db_map = read_excel("data/data_repo/epidem_data_2020-07-29.xlsx")
# read the most recent epidemic DB
db_map = read_excel("data/data_repo/epidem_data_2020-07-29.xlsx")
# set Working Directory as the code_dashboard directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd('..')
# read the most recent epidemic DB
db_map = read_excel("data/data_repo/epidem_data_2020-07-29.xlsx")
north_arrow <- '<img src="https://image.flaticon.com/icons/svg/731/731590.svg" alt="Direction free icon" title="North Direction" width="64" height="64">'
# set pals
pal_casosAtivos <- colorNumeric(
palette = "Spectral",
domain = db_map$Active_cases,
reverse = TRUE
)
pal_FOI <- colorNumeric(
palette = "Spectral",
domain = db_map$FOI,
reverse = TRUE
)
# map
map5 <- db_map %>%
leaflet(
options = leafletOptions(zoomControl = TRUE,
scrollWheelZoom = FALSE,
zoomSnap = 0.25,
zoomDelta = 0.5,
dragging = TRUE),
width = '100%',
height = '800px')  %>%
addLayersControl(baseGroups = c("Força da infecção", # 1
'Casos ativos'), #2
options = layersControlOptions(collapsed = FALSE),
position = "topright") %>%
addProviderTiles(providers$CartoDB.Positron) %>%
fitBounds(-35.018515,  -8.155340, -34.857559,  -7.926497 ) %>%
addPolygons(group = "Força da infecção",
fillColor = ~pal_FOI(FOI),
lng = ~longitude,
lat = ~latitude,
fillOpacity = 0.5,
stroke = TRUE,
color = 'black',
weight = 1,
smoothFactor = 0.2,
label = ~sprintf("<strong style='text-align:center;color:darkblue'> %s </strong><br/><hr>
<strong>Casos ativos:</strong> %s<br/>
<strong>Força da infecção:</strong> %.1f",
Name,
format(Active_cases, decimal.mark = ",", big.mark = "."),
FOI) %>%
lapply(htmltools::HTML),
labelOptions = labelOptions(textsize = "12px")) %>%
addPolygons(group = "Casos ativos",
fillColor = ~pal_casosAtivos(Active_cases),
lng = db_map$longitude,
lat = db_map$latitude,
fillOpacity = 0.5,
stroke = TRUE,
color = 'black',
weight = 1,
smoothFactor = 0.2,
label = ~sprintf("<strong style='text-align:center;color:darkblue'> %s </strong><br/><hr>
<strong>Casos ativos:</strong> %s<br/>
<strong>Força da infecção:</strong> %.1f",
Name,
format(Active_cases, decimal.mark = ",", big.mark = "."),
FOI) %>%
lapply(htmltools::HTML),
labelOptions = labelOptions(textsize = "12px")) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleep = FALSE) %>%
addScaleBar(position = "bottomleft") %>%
addControl(html = north_arrow,
position = "bottomright",
className = "") %>%
htmlwidgets::onRender("
function(el, x) {
this.on('baselayerchange', function(e) {
e.layer.bringToBack();
})
}") %>%
addLegend(pal = pal_FOI,
values = ~FOI,
labFormat = labelFormat(prefix = "", suffix = "",
#between = ", ",
#transform = function(x) 100 * x
big.mark = " "),
group = "Força da infecção",
position = "topright" ,
title = "Força da infecção") %>%
addLegend(pal = pal_casosAtivos,
values = ~Active_cases,
labFormat = labelFormat(prefix = "", suffix = "",
#between = ", ",
#transform = function(x) 100 * x
big.mark = " "),
group = "Casos ativos",
position = "topright" ,
title = "Casos ativos") %>%
htmlwidgets::onRender("
function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}")
map5
# map
map5 <- db_map %>%
leaflet(
options = leafletOptions(zoomControl = TRUE,
scrollWheelZoom = FALSE,
zoomSnap = 0.25,
zoomDelta = 0.5,
dragging = TRUE),
width = '100%',
height = '800px')  %>%
addLayersControl(baseGroups = c("Força da infecção", # 1
'Casos ativos'), #2
options = layersControlOptions(collapsed = FALSE),
position = "topright") %>%
addProviderTiles(providers$CartoDB.Positron) %>%
fitBounds(-35.018515,  -8.155340, -34.857559,  -7.926497 ) %>%
addPolygons(group = "Força da infecção",
fillColor = ~pal_FOI(FOI),
lng = ~longitude,
lat = ~latitude,
fillOpacity = 0.5,
stroke = TRUE,
color = 'black',
weight = 1,
smoothFactor = 0.2,
label = ~sprintf("<strong style='text-align:center;color:darkblue'> %s </strong><br/><hr>
<strong>Casos ativos:</strong> %s<br/>
<strong>Força da infecção:</strong> %.1f",
Name,
format(Active_cases, decimal.mark = ",", big.mark = "."),
FOI) %>%
lapply(htmltools::HTML),
labelOptions = labelOptions(textsize = "12px")) %>%
addPolygons(group = "Casos ativos",
fillColor = ~pal_casosAtivos(Active_cases),
lng = ~longitude,
lat = ~latitude,
fillOpacity = 0.5,
stroke = TRUE,
color = 'black',
weight = 1,
smoothFactor = 0.2,
label = ~sprintf("<strong style='text-align:center;color:darkblue'> %s </strong><br/><hr>
<strong>Casos ativos:</strong> %s<br/>
<strong>Força da infecção:</strong> %.1f",
Name,
format(Active_cases, decimal.mark = ",", big.mark = "."),
FOI) %>%
lapply(htmltools::HTML),
labelOptions = labelOptions(textsize = "12px")) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleep = FALSE) %>%
addScaleBar(position = "bottomleft") %>%
addControl(html = north_arrow,
position = "bottomright",
className = "") %>%
htmlwidgets::onRender("
function(el, x) {
this.on('baselayerchange', function(e) {
e.layer.bringToBack();
})
}") %>%
addLegend(pal = pal_FOI,
values = ~FOI,
labFormat = labelFormat(prefix = "", suffix = "",
#between = ", ",
#transform = function(x) 100 * x
big.mark = " "),
group = "Força da infecção",
position = "topright" ,
title = "Força da infecção") %>%
addLegend(pal = pal_casosAtivos,
values = ~Active_cases,
labFormat = labelFormat(prefix = "", suffix = "",
#between = ", ",
#transform = function(x) 100 * x
big.mark = " "),
group = "Casos ativos",
position = "topright" ,
title = "Casos ativos") %>%
htmlwidgets::onRender("
function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}")
map5
recife_bairros <- readRDS("D:/dado/dados/georeferencias/recife_bairros.rds")
View(recife_bairros)
View(recife_bairros)
# map
map5 <- db_map %>%
leaflet(
options = leafletOptions(zoomControl = TRUE,
scrollWheelZoom = FALSE,
zoomSnap = 0.25,
zoomDelta = 0.5,
dragging = TRUE),
width = '100%',
height = '800px')  %>%
addLayersControl(baseGroups = c("Força da infecção", # 1
'Casos ativos'), #2
options = layersControlOptions(collapsed = FALSE),
position = "topright") %>%
addProviderTiles(providers$CartoDB.Positron) %>%
fitBounds(-35.018515,  -8.155340, -34.857559,  -7.926497 ) %>%
addPolygons(group = "Força da infecção",
fillColor = ~pal_FOI(FOI),
lng = recife_bairros$longitude,
lat = recife_bairros$latitude,
fillOpacity = 0.5,
stroke = TRUE,
color = 'black',
weight = 1,
smoothFactor = 0.2,
label = ~sprintf("<strong style='text-align:center;color:darkblue'> %s </strong><br/><hr>
<strong>Casos ativos:</strong> %s<br/>
<strong>Força da infecção:</strong> %.1f",
Name,
format(Active_cases, decimal.mark = ",", big.mark = "."),
FOI) %>%
lapply(htmltools::HTML),
labelOptions = labelOptions(textsize = "12px")) %>%
addPolygons(group = "Casos ativos",
fillColor = ~pal_casosAtivos(Active_cases),
lng = ~longitude,
lat = ~latitude,
fillOpacity = 0.5,
stroke = TRUE,
color = 'black',
weight = 1,
smoothFactor = 0.2,
label = ~sprintf("<strong style='text-align:center;color:darkblue'> %s </strong><br/><hr>
<strong>Casos ativos:</strong> %s<br/>
<strong>Força da infecção:</strong> %.1f",
Name,
format(Active_cases, decimal.mark = ",", big.mark = "."),
FOI) %>%
lapply(htmltools::HTML),
labelOptions = labelOptions(textsize = "12px")) %>%
addResetMapButton() %>%
addFullscreenControl() %>%
suspendScroll(sleep = FALSE) %>%
addScaleBar(position = "bottomleft") %>%
addControl(html = north_arrow,
position = "bottomright",
className = "") %>%
htmlwidgets::onRender("
function(el, x) {
this.on('baselayerchange', function(e) {
e.layer.bringToBack();
})
}") %>%
addLegend(pal = pal_FOI,
values = ~FOI,
labFormat = labelFormat(prefix = "", suffix = "",
#between = ", ",
#transform = function(x) 100 * x
big.mark = " "),
group = "Força da infecção",
position = "topright" ,
title = "Força da infecção") %>%
addLegend(pal = pal_casosAtivos,
values = ~Active_cases,
labFormat = labelFormat(prefix = "", suffix = "",
#between = ", ",
#transform = function(x) 100 * x
big.mark = " "),
group = "Casos ativos",
position = "topright" ,
title = "Casos ativos") %>%
htmlwidgets::onRender("
function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}")
map5
View(recife_bairros)
View(recife_bairros)
